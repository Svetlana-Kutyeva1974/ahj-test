(()=>{"use strict";var e={964:(e,t,s)=>{e.exports=s.p+"asserts/american-expresss.png"},484:(e,t,s)=>{e.exports=s.p+"asserts/discoverr.png"},36:(e,t,s)=>{e.exports=s.p+"asserts/maestro.png"},856:(e,t,s)=>{e.exports=s.p+"asserts/mastercardd.png"},611:(e,t,s)=>{e.exports=s.p+"asserts/mirr.png"},685:(e,t,s)=>{e.exports=s.p+"asserts/visaa.png"},977:(e,t,s)=>{e.exports=s.p+"asserts/license.txt"}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var c=t[r]={exports:{}};return e[r](c,c.exports,s),c.exports}s.p="",(()=>{var e=s(964),t=s(685),r=s(856),i=s(484),c=s(611),a=s(36);class l{constructor(e){this.parentEl=e,l.divIn()}static create(s){const l=document.createElement("img");let n="";switch(s){case 1:default:n=e;break;case 2:n=t;break;case 3:n=r;break;case 4:n=i;break;case 5:n=c;break;case 6:n=a}return l.src=n,l.alt="Текущее положение",l.classList.add("style-img"),l}static divIn(){for(let e=1;e<7;e+=1){const t=l.create(e);document.querySelector(`.col${e}`).insertAdjacentElement("afterBegin",t)}}}function n(e){const t=String(e).replace(/\D/g,"");let s="";switch(t[0]){case"2":s="div.col.col5";break;case"3":s="div.col.col1";break;case"4":s="div.col.col2";break;case"5":s="div.col.col3";break;case"6":s="div.col.col4";break;default:s=""}return("5"===t[0]&&"0"===t[1]||"5"===t[0]&&"8"===t[1]||"6"===t[0]&&"3"===t[1]||"6"===t[0]&&"7"===t[1])&&(s="div.col.col6"),"3"!==t[0]||"4"!==t[1]&&"7"!==t[1]||(s="div.col.col1"),([51,52,53,54,55].includes(t.slice(0,2))||+t.slice(0,6)>=222100&&+t.slice(0,6)<=272099)&&(s="div.col.col3"),s}new class{constructor(e){this.parentEl=e,this.regex1=new RegExp("^[0-9]{14}$"),this.regex2=new RegExp("^[0-9]{15}$"),this.regex3=new RegExp("^[0-9]{16}$")}static get markup(){return'\n    <div class="cards">\n      <div class="card row-cols-6">\n        <div class="col col1"></div>\n        <div class="col col2"></div>\n        <div class="col col3"></div>\n        <div class="col col4"></div>\n        <div class="col col5"></div>\n        <div class="col col6"></div>\n      </div>\n    </div>\n    <form data-widget="form-widget" class="flex">\n      <div class="form-control">\n        <input id="form-input" data-id="form-input" type="text" minlength="13" maxlength="19">\n      </div>\n      <button class = "button" data-id="form-submit">Проверить</button>\n    </form>\n    '}static get inputSelector(){return"[data-id=form-input]"}static get submitSelector(){return"[data-id=form-submit]"}static get formSelector(){return"[data-widget=form-widget]"}bindToDOM(){console.log("this.parent",this.parentEl),this.parentEl.innerHTML=this.constructor.markup;this.parentEl.querySelector(this.constructor.submitSelector).addEventListener("click",(e=>this.onSubmit(e))),l.divIn()}showMessage(e){const t=document.createElement("div");t.innerHTML=e,t.style="text-align :left";this.parentEl.querySelector(this.constructor.formSelector).insertAdjacentElement("afterEnd",t)}removeMessageAndClass(e){this.parentEl.querySelector(this.constructor.inputSelector).classList.add("invalid"),this.showMessage(e),setTimeout((()=>this.parentEl.children[2].remove()),1e3)}onSubmit(e){e.preventDefault();const t=this.parentEl.querySelector(this.constructor.inputSelector);let s=String(t.value).trim();if(s=String(s).replace(/\D/g,""),this.isValidate(s)&&0!==s[0])if(""!==n(s)){const e=this.parentEl.children[0].querySelector(n(s));e.classList.contains("select")?e.classList.remove("select"):console.log("o"),t.classList.contains("valid")?t.classList.remove("valid"):console.log("not valid"),t.classList.contains("invalid")?t.classList.remove("invalid"):console.log("not invalid"),!function(e){const t=String(e).replace(/\D/g,"");let s=0,r=!1;for(let e=t.length-1;e>=0;e-=1){let i=parseInt(t.charAt(e),10);r&&(i*=2,i>9&&(i-=9)),s+=i,r=!r}let i=!1;return"0"===t[0]?i=!1:s%10==0&&(i=!0),i}(s)?this.removeMessageAndClass("Введенное значение некорректно!"):(t.classList.add("valid"),e.classList.add("select"),this.showMessage("Введенное значение корректно!"),setTimeout((()=>{e.classList.remove("select"),t.classList.remove("valid"),this.parentEl.children[2].remove()}),1e3))}else this.removeMessageAndClass("Ошибка ввода, карта не существует!");else this.removeMessageAndClass("Ошибка ввода, число символов или символы некорректны!");t.value=""}isValidate(e){return this.regex1.test(e)||this.regex2.test(e)||this.regex3.test(e)}}(document.querySelector("#form-container")).bindToDOM();s(977)})()})();